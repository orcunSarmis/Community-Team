[{"C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\index.js":"1","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\App.js":"2","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Home.js":"3","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Signup.js":"4","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Profile.js":"5","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Login.js":"6","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Notfound.js":"7","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\components\\Header\\index.js":"8","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\utils\\mutations.js":"9","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\utils\\auth.js":"10","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\utils\\queries.js":"11","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Communities.js":"12"},{"size":255,"mtime":1659615718187,"results":"13","hashOfConfig":"14"},{"size":1974,"mtime":1660731793591,"results":"15","hashOfConfig":"14"},{"size":1166,"mtime":1660725672499,"results":"16","hashOfConfig":"14"},{"size":5825,"mtime":1660708739358,"results":"17","hashOfConfig":"14"},{"size":2984,"mtime":1660718894980,"results":"18","hashOfConfig":"14"},{"size":5272,"mtime":1660724140911,"results":"19","hashOfConfig":"14"},{"size":204,"mtime":1659615718190,"results":"20","hashOfConfig":"14"},{"size":1642,"mtime":1660602944794,"results":"21","hashOfConfig":"14"},{"size":510,"mtime":1659615718192,"results":"22","hashOfConfig":"14"},{"size":1085,"mtime":1659615718192,"results":"23","hashOfConfig":"14"},{"size":406,"mtime":1660732175188,"results":"24","hashOfConfig":"14"},{"size":667,"mtime":1660734408775,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12aa6m5",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\index.js",[],["57","58"],"C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\App.js",["59"],"import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport Home from './pages/Home';\r\nimport Profile from './pages/Profile';\r\nimport NotFound from './pages/Notfound';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\n\r\nimport Header from './components/Header';\r\nimport Communities from './pages/Communities';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <Header/>\r\n        {/* <Container> */}\r\n          <Routes>\r\n            <Route \r\n              path=\"/\" \r\n              element={<Home />}\r\n            />\r\n            <Route \r\n              path=\"/profile\" \r\n              element={<Profile/>}\r\n            />\r\n            <Route path=\"/communities\" element={<Communities />}/>\r\n            <Route \r\n              path=\"/login\" \r\n              element={<Login/>}\r\n            />\r\n            <Route \r\n              path=\"/signup\" \r\n              element={<Signup/>}\r\n            />\r\n            <Route \r\n              path=\"*\"\r\n              element={<NotFound />}\r\n            />\r\n          </Routes>\r\n        {/* </Container> */}\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Home.js",["60"],"import React from 'react';\r\nimport Img2 from '../img/img2.jpg'\r\nimport Img3 from '../img/img3.jpg'\r\n\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <div className=\"\">\r\n        <div className=\"\" style={{position:'relative'}}>\r\n        <div className=\"\" style={{position:'absolute'}}>\r\n          <img src={Img2} className=\"w-100\" alt=\"\" />\r\n        </div>\r\n        <div className=\"\" style={{position:'absolute', width:'100%', top:'10rem', textAlign:'center', background:'#201919c4', color:'white'}}>\r\n        <h1>Everthing you need local is <span style={{color:'#a7a376'}}>a click away</span></h1>\r\n        <h1>Everthing you need local is <span style={{color:'#a7a376'}}>CommuniTeam</span></h1>\r\n        </div>\r\n        </div>\r\n        {/* <img src={Img3} className=\"w-100\" alt=\"\" /> */}\r\n      </div>\r\n      <div>\r\n        <p>CommuniTeam exists to help new members to settle down, access the services they need, \r\n          meet new people and feel welcome. We want to build bridges and create connections to give \r\n          everyone a chance to take an active role in their community</p>\r\n        </div> \r\n    </main>  \r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Signup.js",["61","62"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BG from \"../img/img3.jpg\";\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center position-relative\">\r\n      <div className=\"position-absolute\">\r\n        <img src={BG} class=\"img-fluid \" alt=\"Responsive image\"></img>\r\n      </div>\r\n      <div className=\"col-12 col-md-10 pt-5 col-lg-10 w-50 mx-auto my-0\">\r\n        <div className=\"card\">\r\n          \r\n          <div className=\"card-body d-flex\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{\" \"}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <div class=\"container\">\r\n                  <div class=\"kpx_login\">\r\n                    <h3 class=\"kpx_authTitle\">\r\n                    <a href=\"Login\">Login</a> or Sign up\r\n                    </h3>\r\n                    <div class=\"row kpx_row-sm-offset-3\">\r\n                      <div class=\"\">\r\n                        <h6>Username</h6>\r\n                        <div class=\"input-group\">\r\n                          <span class=\"input-group-addon\">\r\n                            <span class=\"fa fa-user\"></span>\r\n                          </span>\r\n                          <input\r\n                            className=\"form-input mb-2 w-100 rounded py-md-1 px-md-1 py-lg-2 px-lg-4  w-xs-50\"\r\n                            placeholder=\"\"\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            value={formState.name}\r\n                            onChange={handleChange}\r\n                          />\r\n                        </div>\r\n                        {/* <p class=\" small\">\r\n                          You can use your username\r\n                        </p> */}\r\n                        <h6>Email</h6>\r\n                        <div class=\"input-group\">\r\n                          <span class=\"input-group-addon\">\r\n                            <span class=\"fa fa-user\"></span>\r\n                          </span>\r\n                          <input\r\n                            className=\"form-input mb-2 w-100 rounded py-md-1 px-md-1 py-lg-2 px-lg-4  w-xs-50\"\r\n                            placeholder=\"\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            value={formState.email}\r\n                            onChange={handleChange}\r\n                          />\r\n                        </div>\r\n                        <h6>Password</h6>\r\n                        <div class=\"input-group\">\r\n                          <span class=\"input-group-addon\">\r\n                            <span class=\"fa fa-key\"></span>\r\n                          </span>\r\n                          <input\r\n                            className=\"form-input rounded w-100 py-md-1 px-md-1 py-lg-2 px-lg-4 w-xs-100\"\r\n                            placeholder=\"\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={formState.password}\r\n                            onChange={handleChange}\r\n                          />\r\n                        </div>\r\n                        <span class=\"custom-control-description\">\r\n                          <input type=\"checkbox\" /> Keep me signed in\r\n                        </span>\r\n                        <div class=\" d-flex justify-content-between\">\r\n                          <p class=\"kpx_forgotPwd\">\r\n                            <a href=\"#\">Forgot your login in details?</a>\r\n                          </p>\r\n                          <button\r\n                            className=\"btn btn-block btn-primary\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                            type=\"submit\"\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row kpx_row-sm-offset-3\">\r\n                      <div class=\"\">\r\n                        <label class=\"custom-control custom-checkbox\">\r\n                          <span class=\"custom-control-indicator\"></span>\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div class=\"text-center\">\r\n                        <p class=\"small text-lg-center text-md-center text-sm-center text-xs-center\">\r\n                          Dont't have a My Community Directory account\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Profile.js",["63","64","65","66","67","68","69","70","71"],"import { useQuery } from '@apollo/client';\r\nimport React from 'react';\r\nimport \"../styles/profile.css\";\r\nimport ProPic from \"../img/profile.svg\";\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { QUERY_COMMUNITY } from '../utils/queries';\r\n\r\n\r\nconst Profile = () => {\r\n    const {loading, data} = useQuery(QUERY_ME);\r\n    const {} = useQuery(QUERY_COMMUNITY);\r\n\r\n    if (loading) {\r\n        return (\r\n            <>\r\n                Loading...\r\n            </>\r\n        )\r\n    }\r\n\r\n    const profileData = data?.me || {}\r\n    // const profileData = data?.community || {}\r\n    console.log(profileData._id)\r\n    console.log(profileData.email)\r\n    console.log(profileData.username)\r\n\r\n    return (\r\n        <>\r\n        <p\r\n          style={{ background: \"linear-gradient( 11deg,yellow,green, #811717)\" }}\r\n          className=\"text-center bg-dark text-white fs-4\"\r\n        >\r\n          Profile Page\r\n        </p>\r\n        <div className=\"container \">\r\n          <div className=\"row\">\r\n            <div className=\"twPc-div\">\r\n              <div className=\"twPc-button\"></div>\r\n              <a className=\"twPc-bg twPc-block\"></a>\r\n              <div>\r\n                <a title=\"\" href=\"\" className=\"twPc-avatarLink\">\r\n                  <img alt=\"\" src={ProPic} className=\"twPc-avatarImg\" />\r\n                </a>\r\n                <div className=\"twPc-divUser\">\r\n                  <div className=\"twPc-divName\">\r\n                    <a href=\"\">{profileData.username}</a>\r\n                  </div>\r\n                  <span>\r\n                    <a href=\"\">\r\n                      @<span>{profileData._id}</span> - [{profileData.email}]\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n                <div className=\"twPc-divStats\">\r\n                  <ul className=\"twPc-Arrange d-flex justify-content-around\">\r\n                    <li className=\"twPc-ArrangeSizeFit\">\r\n                      <a href=\"\" title=\"3 events\">\r\n                        <span className=\"twPc-StatLabel twPc-block\">Events</span>\r\n                        <span className=\"twPc-StatValue\">3</span>\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"twPc-ArrangeSizeFit\">\r\n                      <a href=\"\" title=\"885 Following\">\r\n                        <span className=\"twPc-StatLabel twPc-block\">Following</span>\r\n                        <span className=\"twPc-StatValue\">885</span>\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"twPc-ArrangeSizeFit\">\r\n                      <a href=\"\" title=\"1.810 Followers\">\r\n                        <span className=\"twPc-StatLabel twPc-block\">Followers</span>\r\n                        <span className=\"twPc-StatValue\">1.810</span>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Profile","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Login.js",["72"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\nimport \"../styles/login.css\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center  imgepic\">\r\n      <div className=\"col-12 pt-5 col-lg-8 mx-auto my-0\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{\" \"}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <div class=\"container\">\r\n                  <div class=\"kpx_login\">\r\n                    <h3 class=\"kpx_authTitle\">\r\n                      Login or <a href=\"Signup\">Sign up</a>\r\n                    </h3>\r\n                    <div class=\"row kpx_row-sm-offset-3\">\r\n                      <div class=\"\">\r\n                        \r\n                          <h6>Your Email</h6>\r\n                          <div class=\"input-group\">\r\n                            <span class=\"input-group-addon\">\r\n                              <span class=\"fa fa-user\"></span>\r\n                            </span>\r\n                            <input\r\n                              className=\"form-input w-100 rounded py-md-1 px-md-1 py-lg-2 px-lg-4  w-xs-50\"\r\n                              placeholder=\"\"\r\n                              name=\"email\"\r\n                              type=\"email\"\r\n                              value={formState.email}\r\n                              onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                          <p class=\"mt-2 small\">\r\n                            You can you your username, mobile number, or email\r\n                            address\r\n                          </p>\r\n                          <h6>Password</h6>\r\n                          <div class=\"input-group\">\r\n                            <span class=\"input-group-addon\">\r\n                              <span class=\"fa fa-key\"></span>\r\n                            </span>\r\n                            <input\r\n                              className=\"form-input rounded w-100 py-md-1 px-md-1 py-lg-2 px-lg-4 w-xs-100\"\r\n                              placeholder=\"\"\r\n                              name=\"password\"\r\n                              type=\"password\"\r\n                              value={formState.password}\r\n                              onChange={handleChange}\r\n                            />\r\n                          </div>\r\n                          <span class=\"custom-control-description\">\r\n                            <input type=\"checkbox\" /> Keep me signed in\r\n                          </span>\r\n                          <div class=\" d-flex justify-content-between\">\r\n                            <p class=\"kpx_forgotPwd\">\r\n                              <a href=\"#\">Forgot your login in details?</a>\r\n                            </p>\r\n                            <button\r\n                              className=\"btn btn-block btn-primary\"\r\n                              style={{ cursor: \"pointer\" }}\r\n                              type=\"submit\"\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row kpx_row-sm-offset-3\">\r\n                      <div class=\"\">\r\n                        <label class=\"custom-control custom-checkbox\">\r\n                         \r\n                          <span class=\"custom-control-indicator\"></span>\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div class=\"text-center\">\r\n                        <p class=\"small text-lg-center text-md-center text-sm-center text-xs-center\">\r\n                          Dont't have a CommuniTeam account\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Notfound.js",[],"C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\components\\Header\\index.js",["73","74"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n// import { BiArchive } from \"react-icons/bi\";\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst styles = {\r\n  Nav: {\r\n    background: \"#f3233a\",\r\n  },\r\n  NavLink: {\r\n    color: \"#F5F8F7\",\r\n  },\r\n};\r\n\r\nconst Header = () => {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n  return (\r\n    <Nav style={styles.Nav}  className=\"justify-content-end me-auto\" expand=\"lg\">\r\n      <Nav.Item style={styles.NavLink} className=\"justify-content-end me-auto\" >\r\n        CommuniTeam\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link style={styles.NavLink} as={Link} to=\"/\">\r\n          Home\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link style={styles.NavLink} as={Link} to=\"/profile\">\r\n          Profile\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <Nav.Item>\r\n            <Nav.Link style={styles.NavLink} onClick={logout}>\r\n              Logout\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Nav.Item>\r\n            <Nav.Link style={styles.NavLink} as={Link} to=\"/login\">\r\n              Login\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link style={styles.NavLink} as={Link} to=\"/signup\" >\r\n              Signup\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\utils\\mutations.js",[],"C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\utils\\auth.js",[],"C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\utils\\queries.js",[],"C:\\bootCamp\\Activities-BC\\Community-Team\\client\\src\\pages\\Communities.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":17},{"ruleId":"79","severity":1,"message":"83","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":45,"column":9,"nodeType":"86","endLine":45,"endColumn":65},{"ruleId":"87","severity":1,"message":"88","line":115,"column":29,"nodeType":"86","endLine":115,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":11,"column":11,"nodeType":"91","messageId":"92","endLine":11,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":39,"column":15,"nodeType":"86","endLine":39,"endColumn":49},{"ruleId":"87","severity":1,"message":"95","line":39,"column":15,"nodeType":"86","endLine":39,"endColumn":49},{"ruleId":"87","severity":1,"message":"88","line":41,"column":17,"nodeType":"86","endLine":41,"endColumn":65},{"ruleId":"87","severity":1,"message":"88","line":46,"column":21,"nodeType":"86","endLine":46,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":49,"column":21,"nodeType":"86","endLine":49,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":57,"column":23,"nodeType":"86","endLine":57,"endColumn":51},{"ruleId":"87","severity":1,"message":"88","line":63,"column":23,"nodeType":"86","endLine":63,"endColumn":56},{"ruleId":"87","severity":1,"message":"88","line":69,"column":23,"nodeType":"86","endLine":69,"endColumn":58},{"ruleId":"87","severity":1,"message":"88","line":100,"column":31,"nodeType":"86","endLine":100,"endColumn":43},{"ruleId":"79","severity":1,"message":"80","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":17},{"ruleId":"79","severity":1,"message":"96","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":14},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Img3' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Navbar' is defined but never used.","no-global-assign","no-unsafe-negation"]