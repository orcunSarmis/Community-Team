{"version":3,"sources":["pages/Home.js","utils/queries.js","pages/Profile.js","pages/Notfound.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Header/index.js","App.js","index.js"],"names":["styles","body","background","card","margin","heading","minHeight","lineHeight","fontSize","color","padding","content","Home","style","QUERY_ME","gql","Profile","useQuery","loading","data","profileData","me","_id","email","username","NotFound","ADD_USER","LOGIN_USER","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","Login","props","useState","password","formState","setFormState","useMutation","login","error","handleChange","event","target","name","value","handleFormSubmit","preventDefault","console","log","variables","Auth","className","to","onSubmit","placeholder","type","onChange","cursor","message","Signup","addUser","Nav","NavLink","Header","expand","Item","Link","as","loggedIn","onClick","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","Container","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bc45913.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst styles = {\r\n  body: {\r\n    background: '#EE4E34',\r\n  },\r\n  card: {\r\n    margin: 20,\r\n    background: '#e8eaf6',\r\n  },\r\n  heading: {\r\n    background: '#3f51b5',\r\n    minHeight: 50,\r\n    lineHeight: 3.5,\r\n    fontSize: '1.2rem',\r\n    color: 'white',\r\n    padding: '0 20px',\r\n  },\r\n  content: {\r\n    padding: 20,\r\n  },\r\n};\r\n\r\nconst Home = () => {\r\n  return (\r\n    \r\n      <main>\r\n        <div style={styles.card}>\r\n          <div style={styles.heading}>Lorem ipsum dolor</div>\r\n          <div style={styles.content}>\r\n            `Sed ut perspiciatis unde omnis iste natus error sit voluptatem\r\n            accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab\r\n            illo inventore veritatis et quasi architecto beatae vitae dicta sunt\r\n            explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut\r\n            odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\r\n            voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum\r\n            quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam\r\n            eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat\r\n            voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam\r\n            corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur?\r\n            Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse\r\n            quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\r\n            voluptas nulla pariatur?`\r\n          </div>\r\n        </div>\r\n      </main>\r\n  \r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME= gql`\r\nquery Me {\r\n  me {\r\n    _id\r\n    username\r\n    email\r\n  }\r\n}\r\n`;","import { useQuery } from '@apollo/client';\r\nimport React from 'react';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst Profile = () => {\r\n    const {loading, data} = useQuery(QUERY_ME);\r\n\r\n    if (loading) {\r\n        return (\r\n            <>\r\n                Loading...\r\n            </>\r\n        )\r\n    }\r\n\r\n    const profileData = data?.me || {}\r\n\r\n    return (\r\n        <>\r\n            <p>Profile Page</p>\r\n            Id: {profileData._id}\r\n            <br/>\r\n            Email: {profileData.email}\r\n            <br/>\r\n            Username: {profileData.username}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <>\r\n            <div>\r\n                Page not found\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import { gql } from '@apollo/client';\r\n\r\nexport const ADD_USER = gql`\r\nmutation AddUser($username: String!, $email: String!, $password: String!) {\r\n  addUser(username: $username, email: $email, password: $password) {\r\n    token\r\n    user {\r\n      _id\r\n      username\r\n      email\r\n    }\r\n  }\r\n}`\r\n\r\nexport const LOGIN_USER = gql`\r\nmutation Login($email: String!, $password: String!) {\r\n  login(email: $email, password: $password) {\r\n    token\r\n    user {\r\n      _id\r\n      username\r\n      email\r\n    }\r\n  }\r\n}`","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n// import { BiArchive } from \"react-icons/bi\";\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst styles = {\r\n  Nav: {\r\n    background: \"#f3233a\",\r\n  },\r\n  NavLink: {\r\n    color: \"#F5F8F7\",\r\n  },\r\n};\r\n\r\nconst Header = () => {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n  return (\r\n    <Nav style={styles.Nav}  className=\"justify-content-end me-auto\" expand=\"lg\">\r\n      <Nav.Item>\r\n        <Nav.Link style={styles.NavLink} as={Link} to=\"/\">\r\n          Home\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link style={styles.NavLink} as={Link} to=\"/profile\">\r\n          Profile\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <Nav.Item>\r\n            <Nav.Link style={styles.NavLink} onClick={logout}>\r\n              Logout\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Nav.Item>\r\n            <Nav.Link style={styles.NavLink} as={Link} to=\"/login\">\r\n              Login\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link style={styles.NavLink} as={Link} to=\"/signup\" >\r\n              Signup\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nimport Home from './pages/Home';\r\nimport Profile from './pages/Profile';\r\nimport NotFound from './pages/Notfound';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\n\r\nimport Header from './components/Header';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <Header/>\r\n        <Container>\r\n          <Routes>\r\n            <Route \r\n              path=\"/\" \r\n              element={<Home />}\r\n            />\r\n            <Route \r\n              path=\"/profile\" \r\n              element={<Profile/>}\r\n            />\r\n            <Route \r\n              path=\"/login\" \r\n              element={<Login/>}\r\n            />\r\n            <Route \r\n              path=\"/signup\" \r\n              element={<Signup/>}\r\n            />\r\n            <Route \r\n              path=\"*\"\r\n              element={<NotFound />}\r\n            />\r\n          </Routes>\r\n        </Container>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}